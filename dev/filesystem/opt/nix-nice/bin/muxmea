#!/bin/sh

# Create a tmux session with a half dozen windows.
# Specify a file glob matching a project under
#  ~/src/[code|review]/[provider]/

if [ -z "$1" ]
then
	echo "No project name specified; just use plain old tmux.";
	exit 1;
fi;

case "$1" in
	-\? | -h | -l | ls)
		tmux ls;
		exit 0;
esac;

for base in ~/src ~/hosthome/src
do
	projdir=$(find $base -mindepth 3 -maxdepth 3 -type d -iname "*$1*" | sort -f | head -1);
	[ -n "$projdir" ] && break;
done;
projdir=${projdir#$base/*/};
session=$(echo "$1" |tr '[:lower:]' '[:upper:]');

# detach from any existing session first
if [ -n "$TMUX" ]
then
	session=$(tmux display-message -p '#{session_name}');
	echo "Already in session '$session', and it's impossible to create a sibling session.";
	echo "Run this command again after detaching";
	sleep 2;
	tmux detach;
	exit 0; # unnecessary; detaching will stop the script
fi;


# jump into existing session, or create a new one
if tmux has-session -t "$session" 2>/dev/null
then
	echo "Attaching to existing session '$session'";
	tmux attach -t "$session";
else
	echo "Building new session '$session'";
	exist=0;
	for dir in code review
	do
		for iter in A B
		do
			if [ $exist -eq 0 ]
			then
				tmux new-session -s "$session" -n "$dir$iter" -d -c "$base/$dir/$projdir";
				exist=1;
			else
				tmux new-window -t "$session" -n "$dir$iter" -c "$base/$dir/$projdir";
			fi;
		done;
	done;
	for iter in 1 2
	do
		tmux new-window -t "$session" -c "$HOME";
	done;
	tmux attach -t "$session" \; select-window -t "codeA";
fi;
